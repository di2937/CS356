{"Incoming header": "GET http://www.neverssl.com/ HTTP/1.1\r\nHost: www.neverssl.com\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.16; rv:86.0) Gecko/20100101 Firefox/86.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nUpgrade-Insecure-Requests: 1\r\n\r\n", "Modified header": "GET http://www.neverssl.com/ HTTP/1.0\r\nHost: www.neverssl.com\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.16; rv:86.0) Gecko/20100101 Firefox/86.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\nUpgrade-Insecure-Requests: 1\r\n\r\n\r\n", "Server response received": ", no <a\n    href=\"https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\">HSTS</a>,\n    no HTTP/2.0, just plain old unencrypted HTTP and forever stuck in the dark\n    ages of internet security.</p> \n\n    <h2>Why?</h2>\n    <p>Normally, that's a bad idea. You should always use SSL and secure\n    encryption when possible. In fact, it's such a bad idea that most websites\n    are now using https by default.</p>\n    \n    <p>And that's great, but it also means that if you're relying on\n    poorly-behaved wifi networks, it can be hard to get online.  Secure\n    browsers and websites using https make it impossible for those wifi\n    networks to send you to a login or payment page. Basically, those networks\n    can't tap into your connection just like attackers can't. Modern browsers\n    are so good that they can remember when a website supports encryption and\n    even if you type in the website name, they'll use https.</p> \n\n    <p>And if the network never redirects you to this page, well as you can\n    see, you're not missing much.</p>\n\n    </div>\n    </div>\n    \n    </body>\n</html>\n"}